import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class BOJ_10942_팰린드롬 {

    static int[] arr;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder sb = new StringBuilder();
        StringTokenizer st = null;


        int N = Integer.parseInt(br.readLine());
        st = new StringTokenizer(br.readLine(), " ");

        arr = new int[N];

        for (int i = 0 ; i < N ; i++){
            arr[i] = Integer.parseInt(st.nextToken());
        }

        int M = Integer.parseInt(br.readLine());
        for (int m = 0 ; m < M ; m++){
            st = new StringTokenizer(br.readLine(), " ");
            int start = Integer.parseInt(st.nextToken()) - 1;
            int end = Integer.parseInt(st.nextToken()) - 1;
            int ans = isPel(start, end);
            sb.append(ans + "\n");
        }
        System.out.println(sb);
    }

    public static int isPel(int start, int end){
        int compCnt = (end - start + 1) / 2; // 비교 횟수
        for (int i = 0 ; i < compCnt ; i++){
            if(arr[start] != arr[end])
                return 0;
            start = start + 1;
            end = end - 1;
        }
        return 1;
    }
}
